# A valid snippet should starts with:
#
#		snippet trigger_word [ "description" [ options ] ]
#
# and end with:
#
#		endsnippet
#
# Snippet options:
#
#		b - Beginning of line.
#		i - In-word expansion.
#		w - Word boundary.
#		r - Regular expression
#		e - Custom context snippet
#		A - Snippet will be triggered automatically, when condition matches.
#
# Basic example:
#
#		snippet emitter "emitter properties" b
#		private readonly ${1} = new Emitter<$2>()
#		public readonly ${1/^_(.*)/$1/}: Event<$2> = this.$1.event
#		endsnippet
#
# Online reference: https://github.com/SirVer/ultisnips/blob/master/doc/UltiSnips.txt

snippet toc "table of content" b
[[TOC]]
endsnippet

snippet set "set {}" w
\\{ $1 \\}
endsnippet

snippet eq "equation" b
$$
$1
$$
endsnippet

snippet aligned "aligned environment" b
$$\\begin{aligned}
$1
\\end{aligned}$$
$0
endsnippet

snippet cases "cases environment" w
$$\\begin{cases}
$1
\\end{cases}$$
$0
endsnippet

snippet h2 "header level 2" b
## $1
endsnippet
snippet h3 "header level 3" b
### $1
endsnippet
snippet h4 "header level 4" b
#### $1
endsnippet
snippet h5 "header level 5" b
##### $1
endsnippet
snippet h6 "header level 6" b
###### $1
endsnippet

snippet hat "hat symbol" w
\\hat{$1}$0
endsnippet

snippet frac "fraction" w
\\frac{$1}{$2}$0
endsnippet

snippet geq "great or equal to" w
\\geqslant
endsnippet

snippet leq "less or equal to" w
\\leqslant
endsnippet

snippet bigO "big O notation" w
\\mathcal{O} (n$1)$0
endsnippet

snippet lim "limit" w
\\lim_{ $1 }$0
endsnippet

snippet sum "summation" w
\\sum_{$1}^{$2} $0
endsnippet

snippet prod "product" w
\\prod_{$1}^{$2} $0
endsnippet

snippet cal "mathcal" i
\\mathcal{$1}$0
endsnippet

snippet inf "infinity" i
\\infty
endsnippet

snippet del "strikethrough" i
~~$1~~$0
endsnippet

snippet link "Link to something" i
[${1:Text}]($2)$0
endsnippet

snippet bs "bold symbol" i
\\boldsymbol{$1}$0
endsnippet

snippet bb "mathbb" i
\\mathbb{$1}$0
endsnippet

snippet text "text" i
\\text{$1}$0
endsnippet

snippet norm "norm" i
\\norm{$1}$0
endsnippet

# FIXME
# can we merge this there?
snippet lr() "left right ()" i
\\left($1\\right)$0
endsnippet

snippet lr[] "left right []" i
\\left[$1\\right]$0
endsnippet

snippet lr{} "left right {}" i
\\left\\\{$1\\right\\\}$0
endsnippet

snippet tip "hugo shortcode of tip" b
{{< admonition type=tip >}}
${1:tip_message_here}
{{< /admonition >}}
$0
endsnippet

snippet note "hugo shortcode of note" b
{{< admonition type=note >}}
${1:note_message_here}
{{< /admonition >}}
$0
endsnippet

snippet example "hugo shortcode of example" b
{{< admonition type=example >}}
${1:example_message_here}
{{< /admonition >}}
$0
endsnippet

snippet question "hugo shortcode of question" b
{{< admonition type=question >}}
${1:question_message_here}
{{< /admonition >}}
$0
endsnippet

snippet warning "hugo shortcode of warning" b
{{< admonition type=warning >}}
${1:warning_message_here}
{{< /admonition >}}
$0
endsnippet

snippet bug "hugo shortcode of bug" b
{{< admonition type=warning >}}
${1:bug_message_here}
{{< /admonition >}}
$0
endsnippet

snippet fail "hugo shortcode of failure" b
{{< admonition type=failure >}}
${1:failure_message_here}
{{< /admonition >}}
$0
endsnippet

snippet info "hugo shortcode of info" b
{{< admonition type=info >}}
${1:info_message_here}
{{< /admonition >}}
$0
endsnippet

snippet image "hugo shortcode of image" b
{{< image src="$1"
caption="$2">}}
$0
endsnippet

snippet line_chart "basic line chart" b
\`\`\`chart
{
    "type": "line",
    "data": {
        "datasets": [{
            "label": "entropy",
            "backgroundColor": "#aaaaaa",
            "borderColor": "#aaaaaa",
            "fill": false,
            "pointRadius": 4,
            "cubicInterpolationMode": "monotone",
            "data": [ {"x":0, "y":0}, {"x":1, "y":1}, {"x":2, "y":2} ]
        }]
    },
    "options": {
        "title": {
            "display": true,
            "position": "bottom",
            "text": "title_here",
            "fontSize": 16
        },
        "legend": {
            "display": false
        },
        "scales": {
            "xAxes": [{
                "type": "linear",
                "position": "bottom",
                "scaleLabel": {
                    "display": true,
                    "labelString": "xlabel"
                }
            }],
            "yAxes": [{
                "scaleLabel": {
                    "display": true,
                    "labelString": "ylabel"
                }
            }]
        }
    }
}
\`\`\`
endsnippet
